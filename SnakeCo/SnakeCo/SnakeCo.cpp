// SnakeCo.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h"

#include "GamesStates.h"

#include "States/Intro.h"
#include "States/Menu.h"
#include "States/Level.h"

#include "Game/GameFunctions.h"

#include "Objects/Timer.h"

Cls_Timer Timer;

//Код нажатой клавиши
int SomeButton;

Cls_GameState *State001;
bool IsStateDonnu;

Str_Geminus< unsigned int > FieldSizes;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int _tmain(int argc, _TCHAR* argv[])
{
	IsStateDonnu = false;
	FieldSizes.Primis = 75;
	FieldSizes.Secundus = 23;
	SomeButton = 0;

	//Создаём таймер и указываем количество кадров в секунду
	Timer.SetIntervalFromFPS( 30 );
	//Запускаем первую стадию
	ChangeState( STATE_INTRO, 1, 1, false );

	while( 1 )
	{
		if( Timer.Actuation() )
		{
			//Если какая-либо клавиша была нажата
			if ( _kbhit() )
			{
				//Получаем код клавиши
				SomeButton = _getch();
				//std::cout << SomeButton;
				//Обрабатываем события с клавиатуры
				State001->KeyBoardEvents( SomeButton );
			
			}
			State001->Logic();
		
			State001->Render();
			system("cls");
		}
	}
	return 0;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////СМЕНА СТАДИИ////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void ChangeState( int NextState001, int Diffculty001, int NumberLevel, bool IsGameFinished )
{
	//Сбрасываем код клавиши
	SomeButton = -1;
	//На всякий случай, дабы не произошло не планируемого запуска
	/*
	if( NextState001 == STATE_NULL )
	{
		return;
	}*/
	//Если стадия была создана, то можно удалять
	//Так как сама функция ChangeState запускается разово,
	//то удаление запускается перед созданием
	if( IsStateDonnu )
	{
		//Запускаем деструктор стадии
		State001->~Cls_GameState();
		//delete State001;
		IsStateDonnu = false;
	}
	switch( NextState001 )
	{		
		//Вступление
		case STATE_INTRO:			
			State001 = new Cls_Intro( IsGameFinished );			
			State001->Loading( FieldSizes );				
			IsStateDonnu = true;
			break;
		//Стадия Меню
		case STATE_MENU:
			State001 = new Cls_Menu();
			State001->Loading( FieldSizes );
			IsStateDonnu = true;
			break;	
		//Стадия Уровня
		case STATE_LEVEL:			
			State001 = new Cls_Level( Diffculty001, NumberLevel, Timer );
			State001->Loading( FieldSizes );
			IsStateDonnu = true;
			break;
		//Финальная заставка
		case STATE_OUTRO:
			IsStateDonnu = true;
			break;
		//Выход из игры
		case STATE_EXIT:
			exit( 0 );
			break;
	}
}
